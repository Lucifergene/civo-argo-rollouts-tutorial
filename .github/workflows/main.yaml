name: Progressive delivery on Kubernetes with Argo Rollouts on Civo Kubernetes

on:
  push:
    branches: [deployment]

jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ format('{0}/{1}', secrets.DOCKER_USER, secrets.APP_NAME )}}
          tags: ${{ github.sha }}, latest

  bump-docker-tag:
    name: Bump the Docker tag in the Kustomize manifest
    runs-on: ubuntu-latest
    needs: build-publish
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.6.1"

      - name: Update Kubernetes resources
        run: |
          cd manifests
          kustomize edit set image ${{ secrets.APP_NAME }}=${{ secrets.DOCKER_USER }}/${{ secrets.APP_NAME }}:${{ github.sha }}

      - name: Commit to GitHub
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"          
          git commit -am "Bump docker tag"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  argocd-configure:
    name: Configure ArgoCD
    runs-on: ubuntu-latest
    needs: bump-docker-tag
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Civo CLI
        env:
          URL: https://github.com/civo/cli/releases/download/v1.0.32/civo-1.0.32-linux-amd64.tar.gz
        run: |
          [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
          $SUDO wget $URL
          $SUDO tar -xvf civo-1.0.32-linux-amd64.tar.gz
          $SUDO mv ./civo /usr/local/bin/
          $SUDO chmod +x /usr/local/bin/civo

      - name: Authenticate to Civo API
        run: civo apikey add Login_Key ${{ secrets.CIVO_TOKEN }}

      - name: Save Civo kubeconfig
        run: |
          civo region set ${{ secrets.CIVO_REGION }}
          civo kubernetes config ${{ secrets.CLUSTER_NAME }} --save

      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        id: install

      - name: Apply ArgoCD manifests on Civo
        run: |
          kubectl apply -f argocd/manual-sync-config.yaml


